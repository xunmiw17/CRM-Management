<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.frank.crm.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.frank.crm.vo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="true_name" property="trueName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, user_pwd, true_name, email, phone, is_valid, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.frank.crm.vo.User" >
    insert into t_user (id, user_name, user_pwd, 
      true_name, email, phone, 
      is_valid, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{trueName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{isValid,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <!--
    The adding operation returns the number of affected roles by default. But we can set the return value to be the
    auto-generated id.

    useGeneratedKeys: means the auto-generated id will be retrieved and will be set to keyProperty of the Java vo class
    keyProperty: sets the keyProperty variable of the vo class to be the auto-generated id retrieved
    keyColumn: the name of the auto-generated field

    The returned key will be auto-set to the variable of the corresponding vo class.
  -->
  <insert id="insertSelective" parameterType="com.frank.crm.vo.User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPwd != null" >
        user_pwd,
      </if>
      <if test="trueName != null" >
        true_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.frank.crm.vo.User" >
    update t_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null" >
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.frank.crm.vo.User" >
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR},
      true_name = #{trueName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryUserByName" parameterType="string" resultType="com.frank.crm.vo.User">
    SELECT
        <include refid="Base_Column_List"></include>
    FROM
        t_user
    WHERE
        user_name = #{userName}
  </select>
  <!-- Query all the sales people -->
  <select id="queryAllSales" resultType="java.util.Map">
    SELECT u.id, u.user_name uname
    FROM t_user u
    LEFT JOIN t_user_role ur ON u.id = ur.user_id
    LEFT JOIN t_role r ON r.id = ur.role_id
    WHERE u.is_valid = 1 AND
          r.is_valid = 1 AND
          r.role_name = "销售"
  </select>

  <select id="selectByParams" parameterType="com.frank.crm.query.UserQuery" resultType="com.frank.crm.vo.User">
    SELECT
        <include refid="Base_Column_List"></include>
    FROM
        t_user
    <where>
      is_valid = 1
      <if test="userName != null and userName != ''">
        AND user_name LIKE concat('%', #{userName}, '%')
      </if>
      <if test="email != null and email != ''">
        AND email LIKE concat('%', #{email}, '%')
      </if>
      <if test="phone != null and phone != ''">
        AND phone LIKE concat('%', #{phone}, '%')
      </if>
    </where>
  </select>
  <update id="deleteBatch">
    UPDATE t_user
    SET is_valid = 0
    WHERE id IN
        <foreach collection="array" item="id" open="(" close=")" separator=",">
          #{id}
        </foreach>
  </update>
  <select id="queryAllCustomerManagers" resultType="map">
    SELECT u.id, u.user_name uname
    FROM t_user u
           LEFT JOIN t_user_role ur ON u.id = ur.user_id
           LEFT JOIN t_role r ON r.id = ur.role_id
    WHERE u.is_valid = 1 AND
      r.is_valid = 1 AND
      r.role_name = "客户经理"
  </select>
</mapper>